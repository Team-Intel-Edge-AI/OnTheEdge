import { SENSITIVE_STRING } from "@smithy/smithy-client";
import { IVSRealTimeServiceException as __BaseException } from "./IVSRealTimeServiceException";
export class AccessDeniedException extends __BaseException {
    constructor(opts) {
        super({
            name: "AccessDeniedException",
            $fault: "client",
            ...opts,
        });
        this.name = "AccessDeniedException";
        this.$fault = "client";
        Object.setPrototypeOf(this, AccessDeniedException.prototype);
        this.exceptionMessage = opts.exceptionMessage;
    }
}
export class ConflictException extends __BaseException {
    constructor(opts) {
        super({
            name: "ConflictException",
            $fault: "client",
            ...opts,
        });
        this.name = "ConflictException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ConflictException.prototype);
        this.exceptionMessage = opts.exceptionMessage;
    }
}
export class InternalServerException extends __BaseException {
    constructor(opts) {
        super({
            name: "InternalServerException",
            $fault: "server",
            ...opts,
        });
        this.name = "InternalServerException";
        this.$fault = "server";
        Object.setPrototypeOf(this, InternalServerException.prototype);
        this.exceptionMessage = opts.exceptionMessage;
    }
}
export class PendingVerification extends __BaseException {
    constructor(opts) {
        super({
            name: "PendingVerification",
            $fault: "client",
            ...opts,
        });
        this.name = "PendingVerification";
        this.$fault = "client";
        Object.setPrototypeOf(this, PendingVerification.prototype);
        this.exceptionMessage = opts.exceptionMessage;
    }
}
export class ResourceNotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "ResourceNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceNotFoundException.prototype);
        this.exceptionMessage = opts.exceptionMessage;
    }
}
export class ServiceQuotaExceededException extends __BaseException {
    constructor(opts) {
        super({
            name: "ServiceQuotaExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "ServiceQuotaExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ServiceQuotaExceededException.prototype);
        this.exceptionMessage = opts.exceptionMessage;
    }
}
export class ValidationException extends __BaseException {
    constructor(opts) {
        super({
            name: "ValidationException",
            $fault: "client",
            ...opts,
        });
        this.name = "ValidationException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ValidationException.prototype);
        this.exceptionMessage = opts.exceptionMessage;
    }
}
export const ParticipantTokenCapability = {
    PUBLISH: "PUBLISH",
    SUBSCRIBE: "SUBSCRIBE",
};
export const RecordingConfigurationFormat = {
    HLS: "HLS",
};
export const DestinationState = {
    ACTIVE: "ACTIVE",
    FAILED: "FAILED",
    RECONNECTING: "RECONNECTING",
    STARTING: "STARTING",
    STOPPED: "STOPPED",
    STOPPING: "STOPPING",
};
export const CompositionState = {
    ACTIVE: "ACTIVE",
    FAILED: "FAILED",
    STARTING: "STARTING",
    STOPPED: "STOPPED",
    STOPPING: "STOPPING",
};
export const ParticipantState = {
    CONNECTED: "CONNECTED",
    DISCONNECTED: "DISCONNECTED",
};
export const EventErrorCode = {
    INSUFFICIENT_CAPABILITIES: "INSUFFICIENT_CAPABILITIES",
    PUBLISHER_NOT_FOUND: "PUBLISHER_NOT_FOUND",
    QUOTA_EXCEEDED: "QUOTA_EXCEEDED",
};
export const EventName = {
    JOINED: "JOINED",
    JOIN_ERROR: "JOIN_ERROR",
    LEFT: "LEFT",
    PUBLISH_ERROR: "PUBLISH_ERROR",
    PUBLISH_STARTED: "PUBLISH_STARTED",
    PUBLISH_STOPPED: "PUBLISH_STOPPED",
    SUBSCRIBE_ERROR: "SUBSCRIBE_ERROR",
    SUBSCRIBE_STARTED: "SUBSCRIBE_STARTED",
    SUBSCRIBE_STOPPED: "SUBSCRIBE_STOPPED",
};
export const ParticipantTokenFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.token && { token: SENSITIVE_STRING }),
});
export const CreateParticipantTokenResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.participantToken && { participantToken: ParticipantTokenFilterSensitiveLog(obj.participantToken) }),
});
export const CreateStageResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.participantTokens && {
        participantTokens: obj.participantTokens.map((item) => ParticipantTokenFilterSensitiveLog(item)),
    }),
});
