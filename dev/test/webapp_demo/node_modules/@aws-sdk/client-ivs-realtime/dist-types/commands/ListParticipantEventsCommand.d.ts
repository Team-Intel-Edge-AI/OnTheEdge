import { Command as $Command } from "@smithy/smithy-client";
import { MetadataBearer as __MetadataBearer } from "@smithy/types";
import { IVSRealTimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../IVSRealTimeClient";
import { ListParticipantEventsRequest, ListParticipantEventsResponse } from "../models/models_0";
/**
 * @public
 */
export { __MetadataBearer, $Command };
/**
 * @public
 *
 * The input for {@link ListParticipantEventsCommand}.
 */
export interface ListParticipantEventsCommandInput extends ListParticipantEventsRequest {
}
/**
 * @public
 *
 * The output of {@link ListParticipantEventsCommand}.
 */
export interface ListParticipantEventsCommandOutput extends ListParticipantEventsResponse, __MetadataBearer {
}
declare const ListParticipantEventsCommand_base: {
    new (input: ListParticipantEventsCommandInput): import("@smithy/smithy-client").CommandImpl<ListParticipantEventsCommandInput, ListParticipantEventsCommandOutput, IVSRealTimeClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes>;
    getEndpointParameterInstructions(): import("@smithy/middleware-endpoint").EndpointParameterInstructions;
};
/**
 * @public
 * <p>Lists events for a specified participant that occurred during a specified stage
 *          session.</p>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { IVSRealTimeClient, ListParticipantEventsCommand } from "@aws-sdk/client-ivs-realtime"; // ES Modules import
 * // const { IVSRealTimeClient, ListParticipantEventsCommand } = require("@aws-sdk/client-ivs-realtime"); // CommonJS import
 * const client = new IVSRealTimeClient(config);
 * const input = { // ListParticipantEventsRequest
 *   stageArn: "STRING_VALUE", // required
 *   sessionId: "STRING_VALUE", // required
 *   participantId: "STRING_VALUE", // required
 *   nextToken: "STRING_VALUE",
 *   maxResults: Number("int"),
 * };
 * const command = new ListParticipantEventsCommand(input);
 * const response = await client.send(command);
 * // { // ListParticipantEventsResponse
 * //   events: [ // EventList // required
 * //     { // Event
 * //       name: "STRING_VALUE",
 * //       participantId: "STRING_VALUE",
 * //       eventTime: new Date("TIMESTAMP"),
 * //       remoteParticipantId: "STRING_VALUE",
 * //       errorCode: "STRING_VALUE",
 * //     },
 * //   ],
 * //   nextToken: "STRING_VALUE",
 * // };
 *
 * ```
 *
 * @param ListParticipantEventsCommandInput - {@link ListParticipantEventsCommandInput}
 * @returns {@link ListParticipantEventsCommandOutput}
 * @see {@link ListParticipantEventsCommandInput} for command's `input` shape.
 * @see {@link ListParticipantEventsCommandOutput} for command's `response` shape.
 * @see {@link IVSRealTimeClientResolvedConfig | config} for IVSRealTimeClient's `config` shape.
 *
 * @throws {@link AccessDeniedException} (client fault)
 *  <p/>
 *
 * @throws {@link ValidationException} (client fault)
 *  <p/>
 *
 * @throws {@link IVSRealTimeServiceException}
 * <p>Base exception class for all service exceptions from IVSRealTime service.</p>
 *
 */
export declare class ListParticipantEventsCommand extends ListParticipantEventsCommand_base {
}
